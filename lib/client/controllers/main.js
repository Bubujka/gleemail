// Generated by CoffeeScript 2.0.0-beta7
angular.module('Gleemail').controller('Main', function ($scope, $resource, $location) {
  var configResource, displayTemplate, match, rendererResource, socket, templateListResource;
  templateListResource = $resource('/templates.json');
  rendererResource = $resource('/renderers');
  configResource = $resource('/templates/:id/config');
  $scope.renderers = rendererResource.query();
  $scope.templateList = templateListResource.query();
  $scope.textContent = null;
  $scope.displayedTemplate = null;
  $scope.exportedTemplate = null;
  $scope.dataIndex = 0;
  $scope.chosenRenderer = null;
  $scope.iframeSrc = '';
  if (match = $location.url().match(/^\/templates\/([^\/]+)$/))
    $scope.displayedTemplate = { name: match[1] };
  $scope.$watch('chosenRenderer', function (renderer) {
    if (renderer) {
      $.get('/templates/' + $scope.displayedTemplate.name + '.html?useAbsoluteUrls=true&renderer=' + renderer.key + '&dataIndex=' + $scope.dataIndex, function (html) {
        return $scope.$apply(function () {
          return $scope.exportedTemplate = html;
        });
      });
      return setTimeout(function () {
        return $scope.$apply(function () {
          return $scope.chosenRenderer = null;
        });
      });
    }
  });
  $scope.$watch('displayedTemplate', function (template) {
    var name;
    if (!template)
      return;
    if (name = null != $scope.displayedTemplate ? $scope.displayedTemplate.name : void 0) {
      $scope.config = configResource.get({ id: name });
      $scope.dataIndex = 0;
      return $location.url('/templates/' + name);
    }
  });
  $scope.renderHTML = function (renderer) {
    return $scope.chosenRenderer = renderer;
  };
  $scope.renderText = function (renderer) {
    return $.get('/templates/' + $scope.displayedTemplate.name + '.txt?renderer=' + renderer.key + '&dataIndex=' + $scope.dataIndex, function (data) {
      return $scope.$apply(function () {
        return $scope.textContent = data;
      });
    });
  };
  $scope.previewPrevData = function () {
    return $scope.dataIndex -= 1;
  };
  $scope.previewNextData = function () {
    return $scope.dataIndex += 1;
  };
  $scope.onNewEmailClicked = function () {
    var templateName;
    templateName = prompt('Project Name:');
    if (!templateName)
      return;
    return $.ajax({
      type: 'POST',
      dataType: 'json',
      url: '/templates',
      data: { templateName: templateName },
      error: function () {
        return console.error(arguments);
      },
      success: function () {
        return $scope.$apply(function () {
          var newTemplate;
          newTemplate = { name: templateName };
          $scope.templateList = $scope.templateList.concat([newTemplate]);
          return $scope.displayedTemplate = newTemplate;
        });
      }
    });
  };
  $scope.onLitmusClicked = function () {
    if (!confirm('Are you sure you want to send this to Litmus?'))
      return;
    return $.ajax({
      type: 'POST',
      dataType: 'json',
      url: '/templates/' + $scope.displayedTemplate.name + '/litmus?useAbsoluteUrls=true&dataIndex=' + $scope.dataIndex,
      success: function (data) {
        return console.log('Litmus Results', data);
      },
      error: function (err) {
        return console.error(err);
      }
    });
  };
  $scope.onEmailClicked = function () {
    var email;
    email = prompt('Send to email:');
    if (!email)
      return;
    return $.ajax({
      type: 'POST',
      dataType: 'json',
      data: { email: email },
      url: '/templates/' + $scope.displayedTemplate.name + '/email?useAbsoluteUrls=true&dataIndex=' + $scope.dataIndex,
      error: function (err) {
        return console.error(err);
      }
    });
  };
  $scope.onShipToEloquaClicked = function () {
    if (!confirm('Are you sure you want to send this to Eloqua?'))
      return;
    return $.ajax({
      type: 'POST',
      dataType: 'json',
      url: '/templates/' + $scope.displayedTemplate.name + '/eloqua',
      error: function (err) {
        return console.error(err);
      }
    });
  };
  displayTemplate = function (template) {
    var cacheBuster;
    cacheBuster = new Date().getTime();
    return $scope.iframeSrc = '/templates/' + template.name + '.html?cache-buster=' + cacheBuster + '&dataIndex=' + $scope.dataIndex;
  };
  $scope.$watch('displayedTemplate', function (template) {
    if (template)
      return displayTemplate(template);
  });
  $scope.$watch('dataIndex', function (index) {
    if ($scope.displayedTemplate)
      return displayTemplate($scope.displayedTemplate);
  });
  socket = io('http://localhost');
  return socket.on('connect', function () {
    return socket.on('template-updated', function (template) {
      if (template.name === (null != $scope.displayedTemplate ? $scope.displayedTemplate.name : void 0)) {
        displayTemplate($scope.displayedTemplate);
        return $scope.$apply();
      }
    });
  });
});
